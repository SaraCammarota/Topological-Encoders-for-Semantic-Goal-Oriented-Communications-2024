hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - exp.pooling_ratios=0.98,0.153,0
  job:
    name: main
    chdir: null
    override_dirname: exp.pooling_ratios=0.98,0.153,0
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: C:\Users\HP\OneDrive\Documenti\GitHub\with_hydra
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: C:\Users\HP\OneDrive\Documenti\GitHub\with_hydra\conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      exp: snr_conf
      training: train_conf
      pooling: pooling_conf
      my_model: model_config
      dataset: dataset_config
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
dataset:
  loader:
    _target_: loaders.GraphLoader
    parameters:
      data_domain: graph
      data_type: TUDataset
      data_name: PROTEINS
      data_dir: .
  parameters:
    num_features: 3
    num_classes: 2
    task: classification
    loss_type: cross_entropy
    monitor_metric: accuracy
    task_level: graph
  split_params:
    learning_setting: inductive
    data_split_dir: ./data_splits
    data_seed: 0
    split_type: random
    k: 10
    train_prop: 0.5
  dataloader_params:
    batch_size: 128
    num_workers: 0
    pin_memory: false
  transform: false
my_model:
  metric:
    name: train_loss
    goal: minimize
  seed: 42
  data_seed: 0
  layers:
    hsize: 32
    n_pre: 2
    n_post: 1
    n_conv: 8
    n_dgm_layers: 4
  dgm:
    gamma: 50
    std: 0.0
  dropout: 0.0
  use_gcn: true
  lr: 0.005
  channel:
    noise: awgn
    snr_db: 13
  graph_loss_reg: 1
  poly_loss_reg: 1
  ensemble_steps: 1
pooling:
  pooling_type: asa
  pooling_ratio: 0.3
  topk_minscore: 0.1
training:
  max_epochs: 3
  lr: 0.05
exp:
  test_snr_val:
  - -10
  - -5
  - 0
  - 5
  - 10
  num_trials: 20
  pooling_ratios:
  - 0.98
  - 0.949
  - 0.883
  - 0.612
  - 0.306
  - 0.153
  - 0.0
